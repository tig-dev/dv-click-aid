{"version":3,"sources":["data/tig.js","data/prei.js","utilities/petFuncs.js","pets.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["tig","active_num","pet_list","id","name","image","prei","patPetLink","pet_id","chatPetLink","Pets","data","map","pet","cover","href","target","rel","src","alt","actions","HeartTwoTone","twoToneColor","MessageTwoTone","Meta","title","App","useState","user","setUser","view","setView","className","bordered","layout","size","Item","label","value","onChange","options","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAiBeA,G,OAFH,CAAEC,WAAY,MAAOC,SAfhB,CACf,CACEC,GAAI,QACJC,KAAM,OACNC,MACE,sFAEJ,CACEF,GAAI,OACJC,KAAM,eACNC,MACE,2FCASC,EAFF,CAAEL,WAAY,MAAOC,SAThB,CAChB,CACEC,GAAI,QACJC,KAAM,MACNC,MACE,qF,2BCDOE,G,MAAa,SAACC,GAAD,+CAA8CA,KAE3DC,EAAc,SAACD,GAAD,gDAA+CA,I,QCqD3DE,EA7CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACXC,cAAID,EAAKT,UAAU,SAACW,GAClB,OACE,cAAC,IAAD,CAEEC,MACE,mBAAGC,MDlBeP,ECkBGK,EAAIV,GDlBR,qCAA0CK,ICkB7BQ,OAAO,SAASC,IAAI,aAAlD,SACE,qBAAKC,IAAKL,EAAIR,MAAOc,IAAI,OAG7BC,QAAS,CAUP,mBAEED,IAAI,UACJJ,KAAMR,EAAWM,EAAIV,IACrBa,OAAO,SACPC,IAAI,aALN,SAOE,cAACI,EAAA,EAAD,CAAcC,aAAa,aANvB,WAQN,mBAEEH,IAAI,WACJJ,KAAMN,EAAYI,EAAIV,IACtBa,OAAO,SACPC,IAAI,aALN,SAOE,cAACM,EAAA,EAAD,CAAgBD,aAAa,aANzB,aA3BV,SAqCE,cAAC,IAAKE,KAAN,CAAWC,MAAOZ,EAAIT,QArCxB,UACUS,EAAIV,KDhBO,IAACK,ME6DbkB,EAvDH,WAAO,IAAD,EACQC,mBAAS,OADjB,mBACTC,EADS,KACHC,EADG,OAEQF,mBAAS,QAFjB,mBAETG,EAFS,KAEHC,EAFG,KAIhB,OACE,cAAC,IAAD,CACEC,UAAU,MACVC,UAAU,EACVR,MACE,sBAAKO,UAAU,aAAf,4BAEE,eAAC,IAAD,CAAMA,UAAU,kBAAkBE,OAAO,SAASC,KAAK,QAAvD,UACE,cAAC,IAAKC,KAAN,CAAWC,MAAM,OAAjB,SACE,cAAC,IAAD,CACEC,MAAOV,EACPW,SAAU,SAACD,GAAD,OAAWT,EAAQS,IAC7BE,QAAS,CACP,CAAEH,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,UAAWC,MAAO,aAIjC,cAAC,IAAKF,KAAN,CAAWC,MAAM,OAAjB,SACE,cAAC,IAAD,CACEC,MAAOR,EACPS,SAAU,SAACD,GAAD,OAAWP,EAAQO,IAC7BE,QAAS,CACP,CAAEH,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,sBAvBzC,SA+BE,qBAAKN,UAAU,cAAf,SACY,SAATF,EACU,QAATF,EACE,cAAC,EAAD,CAAMjB,KAAMX,IACD,SAAT4B,EACF,cAAC,EAAD,CAAMjB,KAAML,IAEZ,cAAC,IAAD,IAES,YAATwB,EACF,uCAEA,cAAC,IAAD,SC5CKW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f40a0f2.chunk.js","sourcesContent":["const tig_pets = [\n  {\n    id: 1085652,\n    name: \"Tove\",\n    image:\n      \"https://dappervolk.com/img/pet-accessories/8/8730-o94AjvlYA6-crystal-heart-pet.png\",\n  },\n  {\n    id: 289390,\n    name: \"Mrs. Boulder\",\n    image:\n      \"https://dappervolk.com/img/pet-accessories/8/8502-1jgOpMUsox-strawberry-silk-pet.png\",\n  },\n];\n\nconst tig = { active_num: 23210, pet_list: tig_pets };\n\nexport default tig;\n","const prei_pets = [\n  {\n    id: 1071014,\n    name: \"Tav\",\n    image:\n      \"https://dappervolk.com/img/pet-accessories/8/8750-Zs6wNEkdiV-big-shouty-pet.png\",\n  },\n];\n\nconst prei = { active_num: 23210, pet_list: prei_pets };\n\nexport default prei;\n","import axios from \"axios\";\n\nexport const petPageLink = (pet_id) => `https://dappervolk.com/pet/${pet_id}`;\n\nexport const patPetLink = (pet_id) => `https://dappervolk.com/pet/pat/${pet_id}`;\n\nexport const chatPetLink = (pet_id) => `https://dappervolk.com/pet/chat/${pet_id}`;\n\nexport const patPet = (pet_id) =>\n  axios.get(`https://dappervolk.com/pet/pat/${pet_id}`);\n\nexport const chatPet = (pet_id) =>\n  axios.get(`https://dappervolk.com/pet/chat/${pet_id}`);\n","/* eslint-disable react/jsx-no-target-blank */\nimport { Card, message } from \"antd\";\nimport { CrownTwoTone, MessageTwoTone, HeartTwoTone } from \"@ant-design/icons\";\nimport { map } from \"lodash\";\n\nimport {\n  chatPet,\n  chatPetLink,\n  patPet,\n  patPetLink,\n  activatePet,\n  petPageLink,\n} from \"./utilities/petFuncs\";\n\nconst Pets = ({ data }) =>\n  map(data.pet_list, (pet) => {\n    return (\n      <Card\n        key={`${pet.id}`}\n        cover={\n          <a href={petPageLink(pet.id)} target=\"_blank\" rel=\"noreferrer\">\n            <img src={pet.image} alt=\"\" />\n          </a>\n        }\n        actions={[\n          // <div\n          //   key=\"Activate Pet\"\n          //   alt=\"Activate Pet\"\n          //   onClick={() => activatePet(cookie, pet.id, data.active_num)}\n          //   target=\"_blank\"\n          //   rel=\"next\"\n          // >\n          //   <CrownTwoTone twoToneColor=\"#faad14\" />\n          // </div>,\n          <a\n            key=\"Pat Pet\"\n            alt=\"Pat Pet\"\n            href={patPetLink(pet.id)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <HeartTwoTone twoToneColor=\"#cf1322\" />\n          </a>,\n          <a\n            key=\"Chat Pet\"\n            alt=\"Chat Pet\"\n            href={chatPetLink(pet.id)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <MessageTwoTone twoToneColor=\"#597ef7\" />\n          </a>,\n        ]}\n      >\n        <Card.Meta title={pet.name} />\n      </Card>\n    );\n  });\n\nexport default Pets;\n","import { useState } from \"react\";\nimport { Card, Select, Form, Empty } from \"antd\";\n\nimport \"./app.css\";\nimport tig from \"./data/tig\";\nimport prei from \"./data/prei\";\nimport Pets from \"./pets\";\n\nconst App = () => {\n  const [user, setUser] = useState(\"tig\");\n  const [view, setView] = useState(\"pets\");\n\n  return (\n    <Card\n      className=\"app\"\n      bordered={false}\n      title={\n        <div className=\"app-header\">\n          DV Click Helper\n          <Form className=\"header-controls\" layout=\"inline\" size=\"large\">\n            <Form.Item label=\"User\">\n              <Select\n                value={user}\n                onChange={(value) => setUser(value)}\n                options={[\n                  { label: \"Tig\", value: \"tig\" },\n                  { label: \"Preicia\", value: \"prei\" },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label=\"Page\">\n              <Select\n                value={view}\n                onChange={(value) => setView(value)}\n                options={[\n                  { label: \"Pets\", value: \"pets\" },\n                  { label: \"Alchemy\", value: \"alchemy\" },\n                ]}\n              />\n            </Form.Item>\n          </Form>\n        </div>\n      }\n    >\n      <div className=\"app-content\">\n        {view === \"pets\" ? (\n          user === \"tig\" ? (\n            <Pets data={tig} />\n          ) : user === \"prei\" ? (\n            <Pets data={prei} />\n          ) : (\n            <Empty />\n          )\n        ) : view === \"alchemy\" ? (\n          <div>alch</div>\n        ) : (\n          <Empty />\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}